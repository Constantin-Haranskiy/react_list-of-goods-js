{"version":3,"sources":["App.jsx","index.jsx"],"names":["goodsFromServer","SORT_FIELD_STATES","App","useState","field","isReversed","sortField","setSortField","visibleGoods","goods","obj","result","sort","firstGood","secondGood","localeCompare","length","reverse","sortGoods","className","type","cn","onClick","isSorted","map","good","ReactDOM","render","document","getElementById"],"mappings":"wPAKaA,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAGIC,EACS,WADTA,EAEO,SAoBAC,EAAM,WACjB,MAAkCC,mBAAS,CACzCC,MAAO,GACPC,YAAY,IAFd,mBAAOC,EAAP,KAAkBC,EAAlB,KAKMC,EAvBU,SAACC,EAAOC,GACxB,IAAMC,EAAS,YAAIF,GAAOG,MAAK,SAACC,EAAWC,GACzC,OAAQJ,EAAIN,OACV,KAAKH,EACH,OAAOY,EAAUE,cAAcD,GACjC,KAAKb,EACH,OAAOY,EAAUG,OAASF,EAAWE,OACvC,QACE,OAAO,MAIb,OAAON,EAAIL,WACPM,EAAOM,UACPN,EASiBO,CAAUlB,EAAiBM,GACxCF,EAAsBE,EAAtBF,MAAOC,EAAeC,EAAfD,WAEf,OACE,sBAAKc,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UACEE,IAAG,iBAAkB,CACnB,aAAcjB,IAAUH,KAG5BqB,QAAS,kBAAMf,EAAa,2BACvBD,GADsB,IAEzBF,MAAOH,MATX,iCAeA,wBACEmB,KAAK,SACLD,UACEE,IAAG,oBAAqB,CACtB,aAAcjB,IAAUH,KAG5BqB,QAAS,kBAAMf,EAAa,2BACvBD,GADsB,IAEzBF,MAAOH,MATX,4BAeA,wBACEmB,KAAK,SACLD,UACEE,IAAG,oBAAqB,CACtB,YAAahB,IAGjBiB,QAAS,kBAAMf,EAAa,2BACvBD,GADsB,IAEzBD,YAAaA,MATjB,qBAeCD,GAASC,EACR,wBACEe,KAAK,SACLD,UAAU,4BACVG,QAAS,kBAAMf,EAAa,CAC1BH,MAAO,GACPmB,UAAU,KALd,mBAUE,MAGN,6BACGf,EAAagB,KAAI,SAAAC,GAAI,OACpB,oBAAe,UAAQ,OAAvB,SAA+BA,GAAtBA,YC9GnBC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.72a3b3fe.chunk.js","sourcesContent":["import 'bulma/css/bulma.css';\nimport './App.scss';\nimport cn from 'classnames';\nimport { useState } from 'react';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nconst SORT_FIELD_STATES = {\n  BY_ALPHABET: 'alphabet',\n  BY_LENGTH: 'length',\n};\n\nconst sortGoods = (goods, obj) => {\n  const result = [...goods].sort((firstGood, secondGood) => {\n    switch (obj.field) {\n      case SORT_FIELD_STATES.BY_ALPHABET:\n        return firstGood.localeCompare(secondGood);\n      case SORT_FIELD_STATES.BY_LENGTH:\n        return firstGood.length - secondGood.length;\n      default:\n        return 0;\n    }\n  });\n\n  return obj.isReversed\n    ? result.reverse()\n    : result;\n};\n\nexport const App = () => {\n  const [sortField, setSortField] = useState({\n    field: '',\n    isReversed: false,\n  });\n\n  const visibleGoods = sortGoods(goodsFromServer, sortField);\n  const { field, isReversed } = sortField;\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          type=\"button\"\n          className={\n            cn('button is-info', {\n              'is-light': !(field === SORT_FIELD_STATES.BY_ALPHABET),\n            })\n          }\n          onClick={() => setSortField({\n            ...sortField,\n            field: SORT_FIELD_STATES.BY_ALPHABET,\n          })}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          type=\"button\"\n          className={\n            cn('button is-success', {\n              'is-light': !(field === SORT_FIELD_STATES.BY_LENGTH),\n            })\n          }\n          onClick={() => setSortField({\n            ...sortField,\n            field: SORT_FIELD_STATES.BY_LENGTH,\n          })}\n        >\n          Sort by length\n        </button>\n\n        <button\n          type=\"button\"\n          className={\n            cn('button is-warning', {\n              'is-light': !isReversed,\n            })\n          }\n          onClick={() => setSortField({\n            ...sortField,\n            isReversed: !isReversed,\n          })}\n        >\n          Reverse\n        </button>\n\n        {field || isReversed ? (\n          <button\n            type=\"button\"\n            className=\"button is-danger is-light\"\n            onClick={() => setSortField({\n              field: '',\n              isSorted: false,\n            })}\n          >\n            Reset\n          </button>\n        ) : ''}\n      </div>\n\n      <ul>\n        {visibleGoods.map(good => (\n          <li key={good} data-cy=\"Good\">{good}</li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}